snippet type "Sphinx:Data source configuration options" b
type = ${1:mysql}
endsnippet
snippet sql_host "Sphinx:Data source configuration options" b
sql_host = ${1:localhost}
endsnippet
snippet sql_port "Sphinx:Data source configuration options" b
sql_port = ${1:3306}
endsnippet
snippet sql_user "Sphinx:Data source configuration options" b
sql_user = ${1:root}
endsnippet
snippet sql_pass "Sphinx:Data source configuration options" b
sql_pass = ${1:root}
endsnippet
snippet sql_db "Sphinx:Data source configuration options" b
sql_db = ${1:db_table}
endsnippet
snippet sql_sock "Sphinx:Data source configuration options" b
sql_sock = ${1:/tmp/mysql.sock}
endsnippet
snippet mysql_connect_flags "Sphinx:Data source configuration options" b
mysql_connect_flags = ${1:32}
endsnippet
snippet mysql_ssl_cert "Sphinx:Data source configuration options" b
mysql_ssl_cert = /etc/ssl/client-cert.pem
mysql_ssl_key = /etc/ssl/client-key.pem
mysql_ssl_ca = /etc/ssl/cacert.pem
endsnippet
snippet odbc_dsn "Sphinx:Data source configuration options" b
odbc_dsn = ${1:Driver=\{Oracle ODBC Driver\};Dbq=myDBName;Uid=myUsername;Pwd=myPassword}
endsnippet
snippet sql_query_pre "Sphinx:Data source configuration options" b
sql_query_pre = ${1:SET NAMES utf8}
endsnippet
snippet sql_query "Sphinx:Data source configuration options" b
sql_query = ${1:select * from table}
endsnippet
snippet sql_joined_field "Sphinx:Data source configuration options" b
sql_joined_field = ${1:}
endsnippet
snippet sql_query_range "Sphinx:Data source configuration options" b
sql_query_range = ${1:SELECT MIN(id),MAX(id) FROM documents}
endsnippet
snippet sql_range_step "Sphinx:Data source configuration options" b
sql_range_step = ${1:1000}
endsnippet
snippet sql_query_killlist "Sphinx:Data source configuration options" b
sql_query_killlist = ${1:\\
	SELECT id FROM documents WHERE updated_ts>=@last_reindex UNION \\
	SELECT id FROM documents_deleted WHERE deleted_ts>=@last_reindex
}
endsnippet
snippet sql_attr_uint "Sphinx:Data source configuration options" b
sql_attr_uint = ${1:value}
endsnippet
snippet sql_attr_bool "Sphinx:Data source configuration options" b
sql_attr_bool = ${1:value}
endsnippet
snippet sql_attr_bigint "Sphinx:Data source configuration options" b
sql_attr_bigint = ${1:value}
endsnippet
snippet sql_attr_timestamp "Sphinx:Data source configuration options" b
sql_attr_timestamp = ${1:value}
endsnippet
snippet sql_attr_float "Sphinx:Data source configuration options" b
sql_attr_float = ${1:value}
endsnippet
snippet sql_attr_multi "Sphinx:Data source configuration options" b
sql_attr_multi = ${1:value}
endsnippet
snippet sql_attr_string "Sphinx:Data source configuration options" b
sql_attr_string = ${1:value}
endsnippet
snippet sql_attr_json "Sphinx:Data source configuration options" b
sql_attr_json = ${1:value}
endsnippet
snippet sql_column_buffers "Sphinx:Data source configuration options" b
sql_column_buffers = ${1:mytitle=64K, mycontent=10M}
endsnippet
snippet sql_field_string "Sphinx:Data source configuration options" b
sql_field_string = ${1:value}
endsnippet
snippet sql_file_field "Sphinx:Data source configuration options" b
sql_file_field = ${1:value}
endsnippet
snippet sql_query_post "Sphinx:Data source configuration options" b
sql_query_post = ${1:value}
endsnippet
snippet sql_query_post_index "Sphinx:Data source configuration options" b
sql_query_post_index = ${1:value}
endsnippet
snippet sql_ranged_throttle "Sphinx:Data source configuration options" b
sql_ranged_throttle = ${1:1000}
endsnippet
snippet xmlpipe_command "Sphinx:Data source configuration options" b
xmlpipe_command = ${1:value}
endsnippet
snippet xmlpipe_field "Sphinx:Data source configuration options" b
xmlpipe_field = ${1:value}
endsnippet
snippet xmlpipe_field_string "Sphinx:Data source configuration options" b
xmlpipe_field_string = ${1:value}
endsnippet
snippet xmlpipe_attr_uint "Sphinx:Data source configuration options" b
xmlpipe_attr_uint = ${1:value}
endsnippet
snippet xmlpipe_attr_bigint "Sphinx:Data source configuration options" b
xmlpipe_attr_bigint = ${1:value}
endsnippet
snippet xmlpipe_attr_bool "Sphinx:Data source configuration options" b
xmlpipe_attr_bool = ${1:value}
endsnippet
snippet xmlpipe_attr_timestamp "Sphinx:Data source configuration options" b
xmlpipe_attr_timestamp = ${1:value}
endsnippet
snippet xmlpipe_attr_float "Sphinx:Data source configuration options" b
xmlpipe_attr_float = ${1:value}
endsnippet
snippet xmlpipe_attr_multi "Sphinx:Data source configuration options" b
xmlpipe_attr_multi = ${1:value}
endsnippet
snippet xmlpipe_attr_multi_64 "Sphinx:Data source configuration options" b
xmlpipe_attr_multi_64 = ${1:value}
endsnippet
snippet xmlpipe_attr_string "Sphinx:Data source configuration options" b
xmlpipe_attr_string = ${1:value}
endsnippet
snippet xmlpipe_attr_json "Sphinx:Data source configuration options" b
xmlpipe_attr_json = ${1:value}
endsnippet
snippet xmlpipe_fixup_utf8 "Sphinx:Data source configuration options" b
xmlpipe_fixup_utf8 = ${1:value}
endsnippet
snippet mssql_winauth "Sphinx:Data source configuration options" b
mssql_winauth = ${1:value}
endsnippet
snippet unpack_zlib "Sphinx:Data source configuration options" b
unpack_zlib = ${1:value}
endsnippet
snippet unpack_mysqlcompress "Sphinx:Data source configuration options" b
unpack_mysqlcompress = ${1:value}
endsnippet
snippet unpack_mysqlcompress_maxsize "Sphinx:Data source configuration options" b
unpack_mysqlcompress_maxsize = ${1:value}
endsnippet
snippet csvpipe_delimiter "Sphinx:Data source configuration options" b
csvpipe_delimiter = ${1:value}
endsnippet
snippet type "Sphinx:Index configuration options" b
type = ${1:distributed}
endsnippet
snippet source "Sphinx:Index configuration options" b
source = ${1:value}
endsnippet
snippet path "Sphinx:Index configuration options" b
path = ${1:value}
endsnippet
snippet docinfo "Sphinx:Index configuration options" b
docinfo = ${1:extern}
endsnippet
snippet mlock "Sphinx:Index configuration options" b
mlock = ${1:0}
endsnippet
snippet morphology "Sphinx:Index configuration options" b
morphology = ${1:value}
endsnippet
snippet dict "Sphinx:Index configuration options" b
dict = ${1:value}
endsnippet
snippet index_sp "Sphinx:Index configuration options" b
index_sp = ${1:value}
endsnippet
snippet index_zones "Sphinx:Index configuration options" b
index_zones = ${1:value}
endsnippet
snippet min_stemming_len "Sphinx:Index configuration options" b
min_stemming_len = ${1:value}
endsnippet
snippet stopwords "Sphinx:Index configuration options" b
stopwords = ${1:value}
endsnippet
snippet wordforms "Sphinx:Index configuration options" b
wordforms = ${1:value}
endsnippet
snippet embedded_limit "Sphinx:Index configuration options" b
embedded_limit = ${1:value}
endsnippet
snippet exceptions "Sphinx:Index configuration options" b
exceptions = ${1:value}
endsnippet
snippet min_word_len "Sphinx:Index configuration options" b
min_word_len = ${1:0}
endsnippet
snippet charset_table "Sphinx:Index configuration options" b
charset_table = ${1:0..9, A..Z->a..z, _, a..z, U+410..U+42F->U+430..U+44F, U+430..U+44F}
endsnippet
snippet ignore_chars "Sphinx:Index configuration options" b
ignore_chars = ${1:-}
endsnippet
snippet min_prefix_len "Sphinx:Index configuration options" b
min_prefix_len = ${1:0}
endsnippet
snippet min_infix_len "Sphinx:Index configuration options" b
min_infix_len = ${1:0}
endsnippet
snippet max_substring_len "Sphinx:Index configuration options" b
max_substring_len = ${1:value}
endsnippet
snippet prefix_fields "Sphinx:Index configuration options" b
prefix_fields = ${1:value}
endsnippet
snippet infix_fields "Sphinx:Index configuration options" b
infix_fields = ${1:value}
endsnippet
snippet ngram_len "Sphinx:Index configuration options" b
ngram_len = ${1:value}
endsnippet
snippet ngram_chars "Sphinx:Index configuration options" b
ngram_chars = ${1:U+3000..U+2FA1F}
endsnippet
snippet phrase_boundary "Sphinx:Index configuration options" b
phrase_boundary = ${1:value}
endsnippet
snippet phrase_boundary_step "Sphinx:Index configuration options" b
phrase_boundary_step = ${1:value}
endsnippet
snippet html_strip "Sphinx:Index configuration options" b
html_strip = ${1:value}
endsnippet
snippet html_index_attrs "Sphinx:Index configuration options" b
html_index_attrs = ${1:value}
endsnippet
snippet html_remove_elements "Sphinx:Index configuration options" b
html_remove_elements = ${1:value}
endsnippet
snippet local "Sphinx:Index configuration options" b
local = ${1:value}
endsnippet
snippet agent "Sphinx:Index configuration options" b
agent = ${1:value}
endsnippet
snippet agent_persistent "Sphinx:Index configuration options" b
agent_persistent = ${1:value}
endsnippet
snippet agent_blackhole "Sphinx:Index configuration options" b
agent_blackhole = ${1:value}
endsnippet
snippet agent_connect_timeout "Sphinx:Index configuration options" b
agent_connect_timeout = ${1:value}
endsnippet
snippet agent_query_timeout "Sphinx:Index configuration options" b
agent_query_timeout = ${1:value}
endsnippet
snippet preopen "Sphinx:Index configuration options" b
preopen = ${1:value}
endsnippet
snippet inplace_enable "Sphinx:Index configuration options" b
inplace_enable = ${1:value}
endsnippet
snippet inplace_hit_gap "Sphinx:Index configuration options" b
inplace_hit_gap = ${1:value}
endsnippet
snippet inplace_docinfo_gap "Sphinx:Index configuration options" b
inplace_docinfo_gap = ${1:value}
endsnippet
snippet inplace_reloc_factor "Sphinx:Index configuration options" b
inplace_reloc_factor = ${1:value}
endsnippet
snippet inplace_write_factor "Sphinx:Index configuration options" b
inplace_write_factor = ${1:value}
endsnippet
snippet index_exact_words "Sphinx:Index configuration options" b
index_exact_words = ${1:value}
endsnippet
snippet overshort_step "Sphinx:Index configuration options" b
overshort_step = ${1:value}
endsnippet
snippet stopword_step "Sphinx:Index configuration options" b
stopword_step = ${1:value}
endsnippet
snippet hitless_words "Sphinx:Index configuration options" b
hitless_words = ${1:value}
endsnippet
snippet expand_keywords "Sphinx:Index configuration options" b
expand_keywords = ${1:value}
endsnippet
snippet blend_chars "Sphinx:Index configuration options" b
blend_chars = ${1:value}
endsnippet
snippet blend_mode "Sphinx:Index configuration options" b
blend_mode = ${1:value}
endsnippet
snippet rt_mem_limit "Sphinx:Index configuration options" b
rt_mem_limit = ${1:128M}
endsnippet
snippet rt_field "Sphinx:Index configuration options" b
rt_field = ${1:value}
endsnippet
snippet rt_attr_uint "Sphinx:Index configuration options" b
rt_attr_uint = ${1:value}
endsnippet
snippet rt_attr_bool "Sphinx:Index configuration options" b
rt_attr_bool = ${1:value}
endsnippet
snippet rt_attr_bigint "Sphinx:Index configuration options" b
rt_attr_bigint = ${1:value}
endsnippet
snippet rt_attr_float "Sphinx:Index configuration options" b
rt_attr_float = ${1:value}
endsnippet
snippet rt_attr_multi "Sphinx:Index configuration options" b
rt_attr_multi = ${1:value}
endsnippet
snippet rt_attr_multi_64 "Sphinx:Index configuration options" b
rt_attr_multi_64 = ${1:value}
endsnippet
snippet rt_attr_timestamp "Sphinx:Index configuration options" b
rt_attr_timestamp = ${1:value}
endsnippet
snippet rt_attr_string "Sphinx:Index configuration options" b
rt_attr_string = ${1:value}
endsnippet
snippet rt_attr_json "Sphinx:Index configuration options" b
rt_attr_json = ${1:value}
endsnippet
snippet ha_strategy "Sphinx:Index configuration options" b
ha_strategy = ${1:value}
endsnippet
snippet bigram_freq_words "Sphinx:Index configuration options" b
bigram_freq_words = ${1:value}
endsnippet
snippet bigram_index "Sphinx:Index configuration options" b
bigram_index = ${1:value}
endsnippet
snippet index_field_lengths "Sphinx:Index configuration options" b
index_field_lengths = ${1:value}
endsnippet
snippet regexp_filter "Sphinx:Index configuration options" b
regexp_filter = ${1:value}
endsnippet
snippet stopwords_unstemmed "Sphinx:Index configuration options" b
stopwords_unstemmed = ${1:value}
endsnippet
snippet global_idf "Sphinx:Index configuration options" b
global_idf = ${1:value}
endsnippet
snippet rlp_context "Sphinx:Index configuration options" b
rlp_context = ${1:value}
endsnippet
snippet ondisk_attrs "Sphinx:Index configuration options" b
ondisk_attrs = ${1:value}
endsnippet
snippet mem_limit "Sphinx:indexer program configuration options" b
mem_limit = ${1:value}
endsnippet
snippet max_iops "Sphinx:indexer program configuration options" b
max_iops = ${1:value}
endsnippet
snippet max_iosize "Sphinx:indexer program configuration options" b
max_iosize = ${1:value}
endsnippet
snippet max_xmlpipe2_field "Sphinx:indexer program configuration options" b
max_xmlpipe2_field = ${1:value}
endsnippet
snippet write_buffer "Sphinx:indexer program configuration options" b
write_buffer = ${1:value}
endsnippet
snippet max_file_field_buffer "Sphinx:indexer program configuration options" b
max_file_field_buffer = ${1:value}
endsnippet
snippet on_file_field_error "Sphinx:indexer program configuration options" b
on_file_field_error = ${1:value}
endsnippet
snippet lemmatizer_cache "Sphinx:indexer program configuration options" b
lemmatizer_cache = ${1:value}
endsnippet
snippet listen "Sphinx:searchd program configuration options" b
listen = ${1:9312}
endsnippet
snippet log "Sphinx:searchd program configuration options" b
log = ${1:/usr/local/sphinx/var/log/searchd.log}
endsnippet
snippet query_log "Sphinx:searchd program configuration options" b
query_log = ${1:/usr/local/sphinx/var/log/query.log}
endsnippet
snippet query_log_format "Sphinx:searchd program configuration options" b
query_log_format = ${1:value}
endsnippet
snippet read_timeout "Sphinx:searchd program configuration options" b
read_timeout = ${1:5}
endsnippet
snippet client_timeout "Sphinx:searchd program configuration options" b
client_timeout = ${1:value}
endsnippet
snippet max_children "Sphinx:searchd program configuration options" b
max_children = ${1:30}
endsnippet
snippet pid_file "Sphinx:searchd program configuration options" b
pid_file = ${1:/usr/local/sphinx/var/log/searchd.pid}
endsnippet
snippet seamless_rotate "Sphinx:searchd program configuration options" b
seamless_rotate = ${1:1}
endsnippet
snippet preopen_indexes "Sphinx:searchd program configuration options" b
preopen_indexes = ${1:1}
endsnippet
snippet unlink_old "Sphinx:searchd program configuration options" b
unlink_old = ${1:1}
endsnippet
snippet attr_flush_period "Sphinx:searchd program configuration options" b
attr_flush_period = ${1:value}
endsnippet
snippet max_packet_size "Sphinx:searchd program configuration options" b
max_packet_size = ${1:value}
endsnippet
snippet mva_updates_pool "Sphinx:searchd program configuration options" b
mva_updates_pool = ${1:value}
endsnippet
snippet max_filters "Sphinx:searchd program configuration options" b
max_filters = ${1:value}
endsnippet
snippet max_filter_values "Sphinx:searchd program configuration options" b
max_filter_values = ${1:value}
endsnippet
snippet listen_backlog "Sphinx:searchd program configuration options" b
listen_backlog = ${1:value}
endsnippet
snippet read_buffer "Sphinx:searchd program configuration options" b
read_buffer = ${1:value}
endsnippet
snippet read_unhinted "Sphinx:searchd program configuration options" b
read_unhinted = ${1:value}
endsnippet
snippet max_batch_queries "Sphinx:searchd program configuration options" b
max_batch_queries = ${1:value}
endsnippet
snippet subtree_docs_cache "Sphinx:searchd program configuration options" b
subtree_docs_cache = ${1:value}
endsnippet
snippet subtree_hits_cache "Sphinx:searchd program configuration options" b
subtree_hits_cache = ${1:value}
endsnippet
snippet workers "Sphinx:searchd program configuration options" b
workers = ${1:threads}
endsnippet
snippet dist_threads "Sphinx:searchd program configuration options" b
dist_threads = ${1:value}
endsnippet
snippet binlog_path "Sphinx:searchd program configuration options" b
binlog_path = ${1:/usr/local/sphinx/var/data}
endsnippet
snippet binlog_flush "Sphinx:searchd program configuration options" b
binlog_flush = ${1:value}
endsnippet
snippet binlog_max_log_size "Sphinx:searchd program configuration options" b
binlog_max_log_size = ${1:value}
endsnippet
snippet snippets_file_prefix "Sphinx:searchd program configuration options" b
snippets_file_prefix = ${1:value}
endsnippet
snippet collation_server "Sphinx:searchd program configuration options" b
collation_server = ${1:value}
endsnippet
snippet collation_libc_locale "Sphinx:searchd program configuration options" b
collation_libc_locale = ${1:value}
endsnippet
snippet mysql_version_string "Sphinx:searchd program configuration options" b
mysql_version_string = ${1:value}
endsnippet
snippet rt_flush_period "Sphinx:searchd program configuration options" b
rt_flush_period = ${1:value}
endsnippet
snippet thread_stack "Sphinx:searchd program configuration options" b
thread_stack = ${1:value}
endsnippet
snippet expansion_limit "Sphinx:searchd program configuration options" b
expansion_limit = ${1:value}
endsnippet
snippet watchdog "Sphinx:searchd program configuration options" b
watchdog = ${1:value}
endsnippet
snippet prefork_rotation_throttle "Sphinx:searchd program configuration options" b
prefork_rotation_throttle = ${1:value}
endsnippet
snippet sphinxql_state "Sphinx:searchd program configuration options" b
sphinxql_state = ${1:value}
endsnippet
snippet ha_ping_interval "Sphinx:searchd program configuration options" b
ha_ping_interval = ${1:value}
endsnippet
snippet ha_period_karma "Sphinx:searchd program configuration options" b
ha_period_karma = ${1:value}
endsnippet
snippet persistent_connections_limit "Sphinx:searchd program configuration options" b
persistent_connections_limit = ${1:value}
endsnippet
snippet rt_merge_iops "Sphinx:searchd program configuration options" b
rt_merge_iops = ${1:value}
endsnippet
snippet rt_merge_maxiosize "Sphinx:searchd program configuration options" b
rt_merge_maxiosize = ${1:value}
endsnippet
snippet predicted_time_costs "Sphinx:searchd program configuration options" b
predicted_time_costs = ${1:value}
endsnippet
snippet shutdown_timeout "Sphinx:searchd program configuration options" b
shutdown_timeout = ${1:value}
endsnippet
snippet ondisk_attrs_default "Sphinx:searchd program configuration options" b
ondisk_attrs_default = ${1:value}
endsnippet
snippet query_log_min_msec "Sphinx:searchd program configuration options" b
query_log_min_msec = ${1:value}
endsnippet
snippet agent_connect_timeout "Sphinx:searchd program configuration options" b
agent_connect_timeout = ${1:value}
endsnippet
snippet agent_query_timeout "Sphinx:searchd program configuration options" b
agent_query_timeout = ${1:value}
endsnippet
snippet agent_retry_count "Sphinx:searchd program configuration options" b
agent_retry_count = ${1:value}
endsnippet
snippet agent_retry_delay "Sphinx:searchd program configuration options" b
agent_retry_delay = ${1:value}
endsnippet
snippet lemmatizer_base "Sphinx:Common section configuration options" b
lemmatizer_base = ${1:value}
endsnippet
snippet on_json_attr_error "Sphinx:Common section configuration options" b
on_json_attr_error = ${1:value}
endsnippet
snippet json_autoconv_numbers "Sphinx:Common section configuration options" b
json_autoconv_numbers = ${1:value}
endsnippet
snippet json_autoconv_keynames "Sphinx:Common section configuration options" b
json_autoconv_keynames = ${1:value}
endsnippet
snippet rlp_root "Sphinx:Common section configuration options" b
rlp_root = ${1:value}
endsnippet
snippet rlp_environment "Sphinx:Common section configuration options" b
rlp_environment = ${1:value}
endsnippet
snippet rlp_max_batch_size "Sphinx:Common section configuration options" b
rlp_max_batch_size = ${1:value}
endsnippet
snippet rlp_max_batch_docs "Sphinx:Common section configuration options" b
rlp_max_batch_docs = ${1:value}
endsnippet
snippet plugin_dir "Sphinx:Common section configuration options" b
plugin_dir = ${1:value}
endsnippet

snippet sphinx "Sphinx:Create Default Config" b
source source_base
{
	type                 = mysql

	sql_host             = localhost
	sql_user             =
	sql_pass             =
	sql_port             = 3306
	sql_db               = test

    sql_range_step       = 5000
    sql_ranged_throttle  = 0

    sql_query_pre        = SET NAMES utf8
    sql_query_pre        = SET SESSION query_cache_type=OFF
    # sql_query_range    = SELECT MIN(id),MAX(id) FROM test
	sql_query            = select * from test where id >= $start AND id <= $end

	# sql_attr_uint      = group_id
	# sql_attr_timestamp = date_added
    # sql_attr_string    = title
    # sql_attr_bool      = status
    # sql_attr_bool      = my_bigint_id
    # sql_attr_float     = lat_radians
    # sql_attr_multi     = uint tag from query; SELECT docid, tagid FROM tags
    # 字符串字段，可全文搜索，可返回原始文本信息。
    # sql_field_string   = author
}


index index_base
{
    # 索引源声明
    source             = source_base
    # 索引文件的存放位置
    path               = /usr/local/sphinx/var/data/index_base
    # 文件存储模式(默认为extern)
    docinfo            = extern
    # 缓存数据内存锁定
    mlock              = 0
    # 马氏形态学(对中文无效)
    morphology         = none
    # 索引词最小长度 模糊匹配
    min_word_len       = 0
    #ignore_chars      = -
    # 最小索引前缀长度
    min_prefix_len     = 0
    # 最小索引中缀长度 模糊匹配
    min_infix_len      = 0
    # 对于非字母型数据的长度切割(for CJK indexing)
    # ngram_len        = 1
    ngram_chars        = U+3000..U+2FA1F
    # 对否对去除用户输入查询内容的html标签
    html_strip         = 0

    charset_table      = 0..9, A..Z->a..z, _, a..z, U+410..U+42F->U+430..U+44F, U+430..U+44F

    charset_type       = utf-8
    chinese_dictionary = /usr/local/sphinx/etc/xdict
}


indexer
{
	mem_limit = 128M
}


searchd
{
	listen          = 9312
	listen          = 9306:mysql41
	log             = /usr/local/sphinx/var/log/searchd.log
	query_log       = /usr/local/sphinx/var/log/query.log
	read_timeout    = 5
	max_children    = 30
	pid_file        = /usr/local/sphinx/var/log/searchd.pid
	seamless_rotate = 1
	preopen_indexes = 1
	unlink_old      = 1
	workers         = threads # for RT to work
	binlog_path     = /usr/local/sphinx/var/data
}
endsnippet

snippet sphinx.sub "Sphinx:minimize config" b
source source_demo : source_base
{
	sql_db               = test
    sql_query_range      = SELECT MIN(id),MAX(id) FROM demo
    sql_query            = select * from demo where id >= $start AND id <= $end

	# sql_attr_uint      = group_id
	# sql_attr_timestamp = date_added
    sql_field_string     = major_alias
    sql_field_string     = school_name
}


index index_demo : index_base
{
	source = source_demo
	path   = /usr/local/sphinx/var/data/demo
}
endsnippet
